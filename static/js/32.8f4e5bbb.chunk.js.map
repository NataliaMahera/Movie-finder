{"version":3,"file":"static/js/32.8f4e5bbb.chunk.js","mappings":"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","sources":["components/Slider/Slider.jsx","pages/Home/Home.jsx","servises/themoviedbAPI.js"],"sourcesContent":["import './Slider.css';\nimport 'swiper/swiper-bundle.min.css';\n\nimport { Link } from 'react-router-dom';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport {\n  A11y,\n  Autoplay,\n  FreeMode,\n  Navigation,\n  // Pagination,\n  Scrollbar,\n} from 'swiper';\n\nconst Slider = ({ films }) => {\n  console.log(films);\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <>\n      <h1 className=\"title\">Trending today</h1>\n      <div className=\"swiper sample-slider container\">\n        <Swiper\n          modules={[\n            FreeMode,\n            Autoplay,\n            // Pagination,\n            Navigation,\n            Scrollbar,\n            A11y,\n          ]}\n          className=\"swiper sample-slider \"\n          // pagination={{\n          //   clickable: true,\n          //   dynamicBullets: true,\n          //   el: '.swiper-pagination',\n          // }}\n          navigation={{\n            nextEl: '.swiper-button-next',\n            prevEl: '.swiper-button-prev',\n          }}\n          scrollbar={{ draggable: true }}\n          onSwiper={swiper => console.log(swiper)}\n          onSlideChange={() => console.log('slide change')}\n          autoplay={{\n            delay: 0,\n            pauseOnMouseEnter: true,\n            disableOnInteraction: false,\n            reverseDirection: true,\n          }}\n          speed={3500}\n          loop={true}\n          centeredSlides={true}\n          breakpoints={{\n            340: {\n              slidesPerView: 2,\n              spaceBetween: 20,\n            },\n            768: {\n              slidesPerView: 4,\n              spaceBetween: 20,\n            },\n          }}\n          freeMode={true}\n        >\n          {films &&\n            films.map(\n              ({\n                id,\n                title,\n                name,\n                poster_path,\n                original_title,\n                vote_average,\n              }) => (\n                <SwiperSlide key={id}>\n                  <div className=\"container swiper-wrapper\">\n                    <Link to={`/movies/${id}`} className=\"link\">\n                      <img\n                        className=\"image\"\n                        width=\"350px\"\n                        src={\n                          poster_path\n                            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                            : defaultImg\n                        }\n                        alt={original_title}\n                      />\n                      <div className=\"subtitle\">{!title ? name : title}</div>\n                      <p className=\"score\">\n                        User Score: {Math.round(vote_average)}\n                      </p>\n                    </Link>\n                  </div>\n                </SwiperSlide>\n              )\n            )}\n          {/* <div className=\"swiper-pagination\"></div> */}\n          {/* <div className=\"swiper-button-prev\"></div>\n          <div className=\"swiper-button-next\"></div> */}\n        </Swiper>\n      </div>\n    </>\n  );\n};\n\nexport default Slider;\n","import { useEffect, useState } from 'react';\nimport { fetchTrending } from '../../servises/themoviedbAPI';\nimport { Notify } from 'notiflix';\n\nimport Loader from 'components/Loader/Loader';\nimport Slider from 'components/Slider/Slider';\n\nconst Home = () => {\n  const [films, setFilms] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingList = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        await fetchTrending().then(films => {\n          setFilms(films);\n        });\n      } catch {\n        setError(error);\n        Notify.failure('Oops, something went wrong!');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrendingList();\n  }, [error]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <Slider films={films} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '0bd778e99c9dd0be4a5a446585adfec9';\n\nexport const fetchTrending = async () => {\n  const { data } = await axios.get(\n    `trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n\nexport const fetchSelectedTrending = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n\nexport const fetchSearchByKeyWord = async keyword => {\n  const { data } = await axios.get(\n    `search/movie?include_adult=false&api_key=${API_KEY}&language=en-US&page=1&query=${keyword}`\n  );\n  return data;\n};\n"],"names":["_ref","films","console","log","_jsxs","_Fragment","children","_jsx","className","Swiper","modules","FreeMode","Autoplay","Navigation","Scrollbar","A11y","navigation","nextEl","prevEl","scrollbar","draggable","onSwiper","swiper","onSlideChange","autoplay","delay","pauseOnMouseEnter","disableOnInteraction","reverseDirection","speed","loop","centeredSlides","breakpoints","slidesPerView","spaceBetween","freeMode","map","_ref2","id","title","name","poster_path","original_title","vote_average","SwiperSlide","Link","to","concat","width","src","alt","Math","round","_useState","useState","_useState2","_slicedToArray","setFilms","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetchTrendingList","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","fetchTrending","then","t0","Notify","finish","stop","apply","arguments","Loader","Slider","axios","API_KEY","_yield$axios$get","data","sent","abrupt","results","fetchSelectedTrending","_callee2","movieId","_yield$axios$get2","_context2","_x","fetchCast","_ref3","_callee3","_yield$axios$get3","_context3","cast","_x2","fetchReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchSearchByKeyWord","_ref5","_callee5","keyword","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}